AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  UserApi

  Sample SAM Template for UserApi

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Parameters:
  DaciaServicePrincipalSuffix:
    Type: String
    Default: 'dacia_aws_internal'

Resources:
  UserApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: UserApi
      CodeUri: UserApi #UserApi
      Handler: com.awslambda.handlers.UserApiHandler::handleRequest
      Runtime: java8
      Role: arn:aws:iam::255569780290:role/DyamoDBFullAccessRoleInLambda
      MemorySize: 512
      Events:
        UserPostApiGatewayEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BasicAWSApiGateway
            Path: /user/
            Method: POST
        UserPutApiGatewayEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BasicAWSApiGateway
            Path: /user/{userId}/
            Method: PUT
        UserGetApiGatewayEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BasicAWSApiGateway
            Path: /user/{userId}/
            Method: GET
        UserHistoryApiGatewayEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BasicAWSApiGateway
            Path: /user/{userId}/history/
            Method: GET

  # SQS to receive schedules
  ScheduleReceivingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join
                   - "-"
                   - - !Ref "AWS::Region"
                     - !Ref DaciaServicePrincipalSuffix
                     - "ScheduleReceivingQueue"
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt
          - "ScheduleReceivingQueueDLQ"
          - "Arn"
        maxReceiveCount: 5

  # DLQ configuration for ScheduleReceivingQueue
  ScheduleReceivingQueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "ScheduleReceivingQueueDLQ"
      MessageRetentionPeriod: 1209600

  ScheduleReceivingQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ScheduleReceivingQueue
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            AWS: "*"
            # Service: !Join [ ".", [ !Ref AWS::REGION, !Ref DaciaServicePrincipalSuffix] ]
          Action: "sqs:*"
          Resource:
            - !GetAtt ScheduleReceivingQueue.Arn

  SchedulerPublishAssumeRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: SchedulerPublishAssumeRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: "*"
              # Service: !Join [ ".", [ !Ref AWS::REGION, !Ref DaciaServicePrincipalSuffix] ]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: 'sqs-sendMessage-getQueueUrl'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'sqs:SendMessage'
                  - 'sqs:GetQueueUrl'
                Resource:
                  - !GetAtt ScheduleReceivingQueue.Arn

  BasicAWSApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Basic AWS Api Gateway
      StageName: dev
#      DefinitionBody:
#        swagger: '2.0'
#        x-amazon-apigateway-policy:
#          Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Principal: "*"
#              Action: execute-api:Invoke
#              Resource:
#                - !Sub arn:aws:execute-api:*:*:*/dev/*

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#  UserApi:
#    Description: "API Gateway endpoint URL for dev stage for UserApi function"
#    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/user/"
  UserApiFunction:
    Description: "UserApi Lambda Function ARN"
    Value: !GetAtt UserApiFunction.Arn
  BasicAWSApiGatewayRestApiId:
    Description: 'API Gateway ARN for Basic AWS API Gateway'
    Value: !Ref BasicAWSApiGateway
    Export:
      Name: BasicAWSApiGateway-RestApiId
  BasicAWSApiGatewayRootResourceId:
    Value: !GetAtt BasicAWSApiGateway.RootResourceId
    Export:
      Name: BasicAWSApiGateway-RootResourceId

